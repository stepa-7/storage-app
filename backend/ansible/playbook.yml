---
- name: Deploy backend stack
  hosts: backend
  become: true
  gather_facts: yes

  pre_tasks:
    - name: Ensure base packages present
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - python3
          - python3-pip
        state: present
        update_cache: yes

    - name: Ensure deploy directory exists with owner
      ansible.builtin.file:
        path: "{{ compose_dir }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: "0755"

  roles:
    - role: nginx

  tasks:
    - name: Render deploy docker-compose from template
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/docker-compose.deploy.yml.j2"
        dest: "{{ compose_dir }}/docker-compose.yml"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: "0644"
      vars:
        registry: "{{ registry | default(ci_registry, true) }}"
        tag: "{{ tag | default(image_tag, true) }}"

    - name: Render auth-service .env
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/auth-service.env.j2"
        dest: "{{ compose_dir }}/auth-service.env"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: "0600"

    - name: Render storage-module .env
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/storage-module.env.j2"
        dest: "{{ compose_dir }}/storage-module.env"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: "0600"

    - name: Docker login (registry)
      community.docker.docker_login:
        registry_url: "{{ ci_registry }}"
        username: "{{ ci_registry_user }}"
        password: "{{ ci_registry_password }}"
      when: ci_registry != ""

    - name: Compose down (no volumes) to avoid stale ContainerConfig
      community.docker.docker_compose:
        project_name: "{{ project_name }}"
        project_src: "{{ compose_dir }}"
        files: ["{{ compose_file }}"]
        state: absent
        remove_orphans: true
        remove_images: "none"
        remove_volumes: false

    - name: Pull images
      community.docker.docker_compose:
        project_name: "{{ project_name }}"
        project_src: "{{ compose_dir }}"
        files: ["{{ compose_file }}"]
        pull: yes

    - name: Up stack (fresh)
      community.docker.docker_compose:
        project_name: "{{ project_name }}"
        project_src: "{{ compose_dir }}"
        files: ["{{ compose_file }}"]
        state: present
        