stages:
  - build
  - deploy

variables:
  DOCKER_REGISTRY: $CI_REGISTRY
  DOCKER_USER: $CI_REGISTRY_USER
  DOCKER_PASSWORD: $CI_REGISTRY_PASSWORD

build:
  stage: build
  image: docker:20.10
  services:
    - docker:20.10-dind
  before_script:
    - docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD" "$DOCKER_REGISTRY"
  script:
    # Пробегаем по каждому модулю и билдим/пушим
    - docker build -t ${CI_REGISTRY_IMAGE}/api-gateway:${CI_COMMIT_SHORT_SHA} backend/api-gateway-module
    - docker push ${CI_REGISTRY_IMAGE}/api-gateway:${CI_COMMIT_SHORT_SHA}

    - docker build -t ${CI_REGISTRY_IMAGE}/auth-service:${CI_COMMIT_SHORT_SHA} backend/auth-service
    - docker push ${CI_REGISTRY_IMAGE}/auth-service:${CI_COMMIT_SHORT_SHA}

    - docker build -t ${CI_REGISTRY_IMAGE}/storage-module:${CI_COMMIT_SHORT_SHA} backend/storage-module
    - docker push ${CI_REGISTRY_IMAGE}/storage-module:${CI_COMMIT_SHORT_SHA}

    - docker build -t ${CI_REGISTRY_IMAGE}/qr-module:${CI_COMMIT_SHORT_SHA} backend/qr-module
    - docker push ${CI_REGISTRY_IMAGE}/qr-module:${CI_COMMIT_SHORT_SHA}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

deploy:
  stage: deploy
  image: alpine
  before_script:
    - apk add --no-cache openssh-client ansible
    - mkdir -p ~/.ssh
    - echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H 10.10.146.218 >> ~/.ssh/known_hosts
  script:
    - ansible-playbook -i backend/ansible/inventory/hosts.yml \
        --extra-vars "tag=${CI_COMMIT_SHORT_SHA} registry=${CI_REGISTRY_IMAGE}" \
        backend/ansible/playbook.yml
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
